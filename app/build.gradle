apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply tinker插件
apply plugin: 'com.tencent.tinker.patch'
//apply from:'tinkerpatch.gradle

// 指定JDK版本
def getJavaVersion() {
    return JavaVersion.VERSION_1_7
}

android {
    signingConfigs {
//        release {
//            keyAlias 'java2kotlin'
//            keyPassword '123456'
//            storeFile file('/Users/x/Documents/keven/keystore/java2kotlindemo/java2kotlin')
//            storePassword '123456'
//        }
    }

    // Tinker推荐模式
    dexOptions {
        jumboMode = true
    }

    // 关闭aapt对png优化
    aaptOptions {
        cruncherEnabled false
    }


    compileSdkVersion 27
    defaultConfig {
        applicationId "com.keven.kotlin"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 20
        versionName "2.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 使用multiDex库
        multiDexEnabled true
        multiDexKeepProguard file("tinkerMultidexKeep.pro") //keep specific classes using proguard syntax

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        buildTypes {
            debug {
//                signingConfig signingConfigs.release
            }
            release {
//                signingConfig signingConfigs.release
                minifyEnabled false
                multiDexKeepProguard file('multidexKeep.pro')
                multiDexKeepProguard file('tinkerMultidexKeep.pro')
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

def javaVersion = JavaVersion.VERSION_1_7


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:design:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "com.android.support:multidex:1.0.2"
    //若使用annotation需要单独引用,对于tinker的其他库都无需再引用
    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
    compileOnly("com.tinkerpatch.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:${TINKERPATCH_VERSION}") { changing = true }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    implementation 'com.tencent.bugly:crashreport:latest.release' //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    compile files('libs/TalkingdataAnalytics.jar')
}

apply from: 'tinkerpatch.gradle'
repositories {
    mavenCentral()
}



